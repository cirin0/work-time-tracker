{
    "openapi": "3.0.0",
    "info": {
        "title": "User Management API",
        "description": "API for managing users, including registration, login, and role management.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user.",
                "operationId": "registerUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "description": "Login a user and return a JWT token.",
                "operationId": "loginUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get current user",
                "description": "Get the currently authenticated user.",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "Current user retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "0": "bearerAuth"
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout the currently authenticated user.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to logout"
                    }
                },
                "security": [
                    {
                        "0": "bearerAuth"
                    }
                ]
            }
        },
        "/api/clock-in": {
            "post": {
                "tags": [
                    "Time Entries"
                ],
                "summary": "Start a time entry",
                "description": "Start a new time entry for the authenticated user.",
                "operationId": "startTimeEntry",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeEntryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Time entry started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeEntryStartResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/clock-out": {
            "post": {
                "tags": [
                    "Time Entries"
                ],
                "summary": "Stop a time entry",
                "description": "Stop the currently active time entry for the authenticated user.",
                "operationId": "stopTimeEntry",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeEntryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Time entry stopped successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeEntryStopResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "api/time-entries": {
            "get": {
                "tags": [
                    "Time Entries"
                ],
                "summary": "Get time entries",
                "description": "Retrieve all time entries for the authenticated user.",
                "operationId": "getTimeEntries",
                "responses": {
                    "200": {
                        "description": "List of time entries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeEntryStopResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "api/me/time-summary": {
            "get": {
                "tags": [
                    "Time Entries"
                ],
                "summary": "Get time summary",
                "description": "Retrieve a summary of time entries for the authenticated user.",
                "operationId": "getTimeSummary",
                "responses": {
                    "200": {
                        "description": "Time summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeEntrySummaryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of all users",
                "description": "Retrieve a paginated list of users with their details.",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "A paginated list of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "description": "Retrieve a user by ID.",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user details",
                "description": "Update a user by ID.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Delete a user by ID.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/users/{id}/role": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user role",
                "description": "Update the role of a user by ID.",
                "operationId": "updateUserRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "admin",
                                            "manager"
                                        ],
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TimeEntryRequest": {
                "description": "Request for creating or updating a time entry",
                "properties": {
                    "comment": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Worked on project X",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UserLogin": {
                "description": "User login request",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "UserRequest": {
                "description": "User registration request",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "admin",
                            "manager"
                        ],
                        "example": "user"
                    }
                },
                "type": "object"
            },
            "TimeEntryStartResource": {
                "description": "Resource representation of a started time entry",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    },
                    "comment": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Started working on project X"
                    }
                },
                "type": "object"
            },
            "TimeEntryStopResource": {
                "description": "Resource representation of a stopped time entry",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    },
                    "stop_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T14:00:00Z"
                    },
                    "duration": {
                        "description": "Duration in minutes",
                        "type": "integer",
                        "example": 120
                    },
                    "comment": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Worked on project X"
                    }
                },
                "type": "object"
            },
            "TimeEntrySummaryResource": {
                "description": "Resource representation of a time entry summary",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_hours": {
                        "type": "integer",
                        "example": 40
                    },
                    "total_minutes": {
                        "type": "integer",
                        "example": 2400
                    },
                    "entries_count": {
                        "type": "integer",
                        "example": 10
                    },
                    "average_work_time": {
                        "type": "string",
                        "format": "duration",
                        "example": "04:00"
                    },
                    "summary": {
                        "properties": {
                            "today": {
                                "type": "string",
                                "format": "duration",
                                "example": "02:00"
                            },
                            "week": {
                                "type": "string",
                                "format": "duration",
                                "example": "20:00"
                            },
                            "month": {
                                "type": "string",
                                "format": "duration",
                                "example": "80:00"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "description": "User resource representation",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "admin",
                            "manager"
                        ],
                        "example": "user"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Time Entries",
            "description": "Time Entries"
        }
    ]
}